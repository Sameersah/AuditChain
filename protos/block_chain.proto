syntax = "proto3";

package blockchain;

option go_package = "github.com/sameersah/auditchain/proto_gen/block_chain";
option java_package = "com.codecatalyst.auditchain.proto.blockchain";
option java_outer_classname = "BlockChainProto";

import "common.proto";

message WhisperResponse {
  string status = 1;         // "success", "failure"
  string error = 2;
}

message Block {
  string block_hash = 1;
  string previous_block_hash = 2;
  string merkle_root = 3;
  int32 block_number = 4;
  int64 timestamp = 5;
  string proposer_id = 6;
  repeated common.FileAudit audits = 7;
}

message BlockProposal {
  Block block = 1;
  string proposer_id = 2;
  int64 timestamp = 3;
}

message Vote {
  string block_id = 1;
  string validator_id = 2;
  bool approve = 3;
  string signature = 4;
  int64 timestamp = 5;
}

message BlockVoteResponse {
  bool success = 1;
  string message = 2;
}

message TriggerElectionRequest {
  int64 term = 1;
  string address = 2;
}

message TriggerElectionResponse {
  bool vote = 1;
  int64 term = 2;
  string status = 3;
  string error_message = 4;
}

message NotifyLeadershipRequest {
  string address = 1;
}

message NotifyLeadershipResponse {
  string status = 1;
  string error_message = 2;
}

service BlockChainService {
  rpc WhisperAuditRequest (common.FileAudit) returns (WhisperResponse);
  rpc ProposeBlock (BlockProposal) returns (BlockVoteResponse);
  rpc VoteOnBlock (Vote) returns (BlockVoteResponse);
  rpc TriggerElection (TriggerElectionRequest) returns (TriggerElectionResponse);
  rpc NotifyLeadership (NotifyLeadershipRequest) returns (NotifyLeadershipResponse);
}
