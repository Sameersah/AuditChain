plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.codecatalyst.auditchain'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.grpc:grpc-netty-shaded:1.63.0'
    implementation 'io.grpc:grpc-protobuf:1.63.0'
    implementation 'io.grpc:grpc-stub:1.63.0'
    implementation 'com.google.protobuf:protobuf-java-util:3.25.0'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.sparkjava:spark-core:2.9.4'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.63.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            println ">> Will generate proto for task: ${task.name}"
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
        }
    }

}

sourceSets {
    main {
        proto {
            srcDirs = ['src/main/proto']
        }
    }
}

apply plugin: 'application'

mainClassName = 'com.codecatalyst.auditchain.grpc.Main'

application {
    mainClass = 'com.codecatalyst.auditchain.grpc.Main'
}

run {
    if (project.hasProperty("args")) {
        args project.args.split(',')
    }
}