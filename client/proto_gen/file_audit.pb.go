// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: file_audit.proto

package file_audit

import (
	common "github.com/sameersah/auditchain/proto_gen/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileAuditResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ReqId            string                 `protobuf:"bytes,1,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	BlockchainTxHash string                 `protobuf:"bytes,2,opt,name=blockchain_tx_hash,json=blockchainTxHash,proto3" json:"blockchain_tx_hash,omitempty"`
	BlockHeader      *BlockHeader           `protobuf:"bytes,3,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
	Status           string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                                 // "success" or "failure"
	ErrorMessage     string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Optional error message
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FileAuditResponse) Reset() {
	*x = FileAuditResponse{}
	mi := &file_file_audit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAuditResponse) ProtoMessage() {}

func (x *FileAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_audit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAuditResponse.ProtoReflect.Descriptor instead.
func (*FileAuditResponse) Descriptor() ([]byte, []int) {
	return file_file_audit_proto_rawDescGZIP(), []int{0}
}

func (x *FileAuditResponse) GetReqId() string {
	if x != nil {
		return x.ReqId
	}
	return ""
}

func (x *FileAuditResponse) GetBlockchainTxHash() string {
	if x != nil {
		return x.BlockchainTxHash
	}
	return ""
}

func (x *FileAuditResponse) GetBlockHeader() *BlockHeader {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *FileAuditResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileAuditResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type BlockHeader struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BlockHash         string                 `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockNumber       uint64                 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Timestamp         int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PreviousBlockHash string                 `protobuf:"bytes,4,opt,name=previous_block_hash,json=previousBlockHash,proto3" json:"previous_block_hash,omitempty"`
	MerkleRoot        string                 `protobuf:"bytes,5,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	MerkleProof       []string               `protobuf:"bytes,6,rep,name=merkle_proof,json=merkleProof,proto3" json:"merkle_proof,omitempty"`
	AuditHashes       []string               `protobuf:"bytes,7,rep,name=audit_hashes,json=auditHashes,proto3" json:"audit_hashes,omitempty"` // Optional for debug
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	mi := &file_file_audit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_file_audit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_file_audit_proto_rawDescGZIP(), []int{1}
}

func (x *BlockHeader) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *BlockHeader) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BlockHeader) GetPreviousBlockHash() string {
	if x != nil {
		return x.PreviousBlockHash
	}
	return ""
}

func (x *BlockHeader) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *BlockHeader) GetMerkleProof() []string {
	if x != nil {
		return x.MerkleProof
	}
	return nil
}

func (x *BlockHeader) GetAuditHashes() []string {
	if x != nil {
		return x.AuditHashes
	}
	return nil
}

var File_file_audit_proto protoreflect.FileDescriptor

const file_file_audit_proto_rawDesc = "" +
	"\n" +
	"\x10file_audit.proto\x12\tfileaudit\x1a\fcommon.proto\"\xd0\x01\n" +
	"\x11FileAuditResponse\x12\x15\n" +
	"\x06req_id\x18\x01 \x01(\tR\x05reqId\x12,\n" +
	"\x12blockchain_tx_hash\x18\x02 \x01(\tR\x10blockchainTxHash\x129\n" +
	"\fblock_header\x18\x03 \x01(\v2\x16.fileaudit.BlockHeaderR\vblockHeader\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\x84\x02\n" +
	"\vBlockHeader\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\tR\tblockHash\x12!\n" +
	"\fblock_number\x18\x02 \x01(\x04R\vblockNumber\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12.\n" +
	"\x13previous_block_hash\x18\x04 \x01(\tR\x11previousBlockHash\x12\x1f\n" +
	"\vmerkle_root\x18\x05 \x01(\tR\n" +
	"merkleRoot\x12!\n" +
	"\fmerkle_proof\x18\x06 \x03(\tR\vmerkleProof\x12!\n" +
	"\faudit_hashes\x18\a \x03(\tR\vauditHashes2R\n" +
	"\x10FileAuditService\x12>\n" +
	"\vSubmitAudit\x12\x11.common.FileAudit\x1a\x1c.fileaudit.FileAuditResponseB6Z4github.com/sameersah/auditchain/proto_gen/file_auditb\x06proto3"

var (
	file_file_audit_proto_rawDescOnce sync.Once
	file_file_audit_proto_rawDescData []byte
)

func file_file_audit_proto_rawDescGZIP() []byte {
	file_file_audit_proto_rawDescOnce.Do(func() {
		file_file_audit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_audit_proto_rawDesc), len(file_file_audit_proto_rawDesc)))
	})
	return file_file_audit_proto_rawDescData
}

var file_file_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_file_audit_proto_goTypes = []any{
	(*FileAuditResponse)(nil), // 0: fileaudit.FileAuditResponse
	(*BlockHeader)(nil),       // 1: fileaudit.BlockHeader
	(*common.FileAudit)(nil),  // 2: common.FileAudit
}
var file_file_audit_proto_depIdxs = []int32{
	1, // 0: fileaudit.FileAuditResponse.block_header:type_name -> fileaudit.BlockHeader
	2, // 1: fileaudit.FileAuditService.SubmitAudit:input_type -> common.FileAudit
	0, // 2: fileaudit.FileAuditService.SubmitAudit:output_type -> fileaudit.FileAuditResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_file_audit_proto_init() }
func file_file_audit_proto_init() {
	if File_file_audit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_audit_proto_rawDesc), len(file_file_audit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_audit_proto_goTypes,
		DependencyIndexes: file_file_audit_proto_depIdxs,
		MessageInfos:      file_file_audit_proto_msgTypes,
	}.Build()
	File_file_audit_proto = out.File
	file_file_audit_proto_goTypes = nil
	file_file_audit_proto_depIdxs = nil
}
